[{"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/index.js":"1","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/App.js":"2","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/context/Eye4eyeContext.js":"3","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/NotFound.js":"4","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/Main.js":"5","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/Navbar.js":"6","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/Deal.js":"7","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/utils/connect.js":"8","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/index.js":"9","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/App.js":"10","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/context/Eye4eyeContext.js":"11","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/Navbar.js":"12","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/NotFound.js":"13","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/Main.js":"14","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/Deal.js":"15","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/utils/connect.js":"16"},{"size":384,"mtime":1681378058780,"results":"17","hashOfConfig":"18"},{"size":858,"mtime":1681378058779,"results":"19","hashOfConfig":"18"},{"size":11411,"mtime":1681378058780,"results":"20","hashOfConfig":"18"},{"size":141,"mtime":1681378058780,"results":"21","hashOfConfig":"18"},{"size":2496,"mtime":1681541943074,"results":"22","hashOfConfig":"18"},{"size":2254,"mtime":1681541808816,"results":"23","hashOfConfig":"18"},{"size":5916,"mtime":1681541902096,"results":"24","hashOfConfig":"18"},{"size":2238,"mtime":1681379103670,"results":"25","hashOfConfig":"18"},{"size":384,"mtime":1681378058780,"results":"26","hashOfConfig":"27"},{"size":858,"mtime":1681378058779,"results":"28","hashOfConfig":"27"},{"size":12274,"mtime":1681588255706,"results":"29","hashOfConfig":"27"},{"size":1416,"mtime":1681588288013,"results":"30","hashOfConfig":"27"},{"size":141,"mtime":1681378058780,"results":"31","hashOfConfig":"27"},{"size":2496,"mtime":1681541943074,"results":"32","hashOfConfig":"27"},{"size":5916,"mtime":1681541902096,"results":"33","hashOfConfig":"27"},{"size":1123,"mtime":1681580377735,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1tqizre",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"18pez94",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/index.js",[],[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/App.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/context/Eye4eyeContext.js",["86","87"],[],"import { ethers } from \"ethers\";\nimport { createContext, useEffect } from \"react\";\nimport { contractABI, contractAddress, networks } from \"../utils/connect\";\nimport React, { useState } from \"react\";\nexport const Eye4eyeContext = createContext();\n\nconst { ethereum } = window;\n\n\n\nexport const Eye4eyeProvider = ({ children }) => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [currentNetwork, setCurrentNetwork] = useState(\"\");\n  const [inputFormData, setInputFormData] = useState({\n    _amountOfClaim: \"\",\n    _grantDeadline: \"\",\n    _executeDeadlineInterval: \"\",\n  });\n  const [inputDealIdData] = useState({\n    _dealId: \"\",\n  });\n  // Get the smart contract\nconst getSmartContract = async () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n\n  const network = await provider.getNetwork();\n  \n  // currentNetworkがnetworksに存在するか確認\n  // なければ、alertでエラーを出す\n\n  if(!networks[currentNetwork]){\n    alert(\"Please change network to the network \\n\" + (Object.values(networks).map((network) => network.name)).join(\"\\nor \"))\n    return;\n  }\n  // Eye4eyeProvider.currentNetwork = provider.network;\n  // const currentNetwork = provider.network;\n  const eye4eyeContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    signer\n  );\n\n  console.log(provider, signer, eye4eyeContract);\n\n  return eye4eyeContract;\n};\n\nconst getReadOnlySmartContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const eye4eyeContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    provider\n  );\n\n  console.log(provider, eye4eyeContract);\n\n  return eye4eyeContract;\n};\n\n\n  const handleChange = (e, name, convertToSeconds = false) => {\n    let value = e.target.value;\n    if (convertToSeconds === true) {\n      value = value * 3600;\n    }\n    setInputFormData((prevInputFormdata) => ({\n      ...prevInputFormdata,\n      [name]: value,\n    }));\n  };\n  const checkMetamaskWalletConnected = async () => {\n    if (!ethereum)\n      return alert(\n        \"Access from your Metamask browser or from Chrome on your PC.\"\n      );\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n    console.log(accounts);\n  };\n\n  useEffect(() => {\n    checkMetamaskWalletConnected();\n  }, []);\n\n  useEffect(() => {\n    const msgCatch = (_msgValue) => {\n      console.log(\"_msgValue:\", _msgValue);\n    };\n    if (ethereum) {\n      if(currentNetwork){\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner(); \n        const eye4eyeContract = new ethers.Contract(\n          networks[currentNetwork].contractAddress,\n          contractABI,\n          signer\n        );\n        const filter = eye4eyeContract.filters.eventMsgValue(null);\n        eye4eyeContract.on(filter, msgCatch);\n      }\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    if (!ethereum) return alert(\"Install Metamask\");\n\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    console.log(\"connected wallet: %s\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  };\n\n  const getCurrentAccount = () => {\n    return currentAccount;\n  };\n\n  const getCurrentNetwork = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum, \"any\");\n\n    provider.on(\"network\", (newNetwork, oldNetwork) => {\n        // When a Provider makes its initial connection, it emits a \"network\"\n        // event with a null oldNetwork along with the newNetwork. So, if the\n        // oldNetwork exists, it represents a changing network\n        if (oldNetwork) {\n            window.location.reload();\n        }\n        setCurrentNetwork(newNetwork.chainId);\n    });\n    return currentNetwork;\n  };\n\n    const eye4eyeClaim =async () => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeClaim\");\n        const {_amountOfClaim, _grantDeadline, _executeDeadlineInterval} = inputFormData;\n\n        const eye4eyeContract = await getSmartContract();\n        const parsed_AmountOfClaim = ethers.utils.parseEther(_amountOfClaim);\n\n        //eventDealをキャッチし、生成されたdealIdに基づいて生成されたURLに遷移させる\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n\n            const ROOT_URL = \"deal\";\n            const pageId = parseInt(_deal.dealId._hex, 16);\n            console.log(pageId);\n            const pageUrl = `${ROOT_URL}/${pageId}`;\n            //window.open(pageUrl);//別のタブでURLを開く\n            window.location.href = pageUrl;//URLを同じタブで遷移させる\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: parsed_AmountOfClaim._hex\n          };\n\n        const eye4eyeClaimHash = await eye4eyeContract.claim(\n            _grantDeadline,\n            _executeDeadlineInterval,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeClaimHash.hash');\n\n        await eye4eyeClaimHash.wait();\n\n        console.log('Successful transfer!eye4eyeClaimHash.hash');\n    };\n\n    const eye4eyeGrant =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeGrant\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        const amountOfClaimed = eye4eyeGetDealHash.amountOfClaim\n        console.log(\"amountOfClaimed:\", amountOfClaimed);\n        console.log(\"amountOfClaimed._hex:\", amountOfClaimed._hex);\n\n        //eventDealをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: amountOfClaimed._hex, \n          };\n\n        const eye4eyeGrantHash = await eye4eyeContract.grant(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeGrantHash');\n\n        await eye4eyeGrantHash.wait();\n\n        console.log('Successful transfer!eye4eyeGrantHash');\n    };\n\n\n    const eye4eyeBuyerExecuteSeller =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeBuyerExecuteSeller\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n        const amountOfDepositHex = doubleHexValue(eye4eyeGetDealHash.amountOfClaim._hex);\n        console.log(\"amountOfDepositHex:\", amountOfDepositHex);\n        console.log(\"amountOfClaim._hex:\", eye4eyeGetDealHash.amountOfClaim._hex);\n\n        //eventGrantをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: amountOfDepositHex, \n          };\n\n        const eye4eyeBuyerExecuteSellerHash = await eye4eyeContract.buyerExecuteSeller(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeBuyerExecuteSellerHash');\n\n        await eye4eyeBuyerExecuteSellerHash.wait();\n\n        console.log('Successful transfer!eye4eyeBuyerExecuteSellerHash');\n    };\n\n    const eye4eyeSellerExecuteBuyer =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeSellerExecuteBuyer\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n        const amountOfDepositHex = doubleHexValue(eye4eyeGetDealHash.amountOfClaim._hex);\n        console.log(\"amountOfDepositHex:\", amountOfDepositHex);\n        console.log(\"amountOfClaim._hex:\", eye4eyeGetDealHash.amountOfClaim._hex);\n\n        //eventGrantをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: amountOfDepositHex, \n          };\n\n        const eye4eyeSellerExecuteBuyerHash = await eye4eyeContract.sellerExecuteBuyer(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeSellerExecuteBuyerHash');\n\n        await eye4eyeSellerExecuteBuyerHash.wait();\n\n        console.log('Successful transfer!eye4eyeSellerExecuteBuyerHash');\n    }\n\n    const eye4eyeReleaseDeposit =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");;\n        console.log(\"eye4eyeReleaseDeposit\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n        //eventGrantをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n          };\n\n        const eye4eyeReleaseDepositsHash = await eye4eyeContract.releaseDeposits(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeReleaseDepositsHash');\n\n        await eye4eyeReleaseDepositsHash.wait();\n\n        console.log('Successful transfer!eye4eyeReleaseDepositsHash');\n    };\n\n    function doubleHexValue(hexValue) {\n        let decimalValue = parseInt(hexValue, 16);\n        let doubledValue = decimalValue * 2;\n        let added0xDoubledValue = '0x' + doubledValue.toString(16);\n        return added0xDoubledValue;\n    };\n\n    const eye4eyeGetDeal = async (_dealId) => {\n      if (!ethereum) return alert(\"Install Metamask\");\n      const eye4eyeContract = getReadOnlySmartContract();\n    \n      const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    \n      console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n      console.log(\"DealID:\", eye4eyeGetDealHash.dealId);\n    \n      return eye4eyeGetDealHash;\n    };\n\n    return (\n      <Eye4eyeContext.Provider\n        value={{\n          connectWallet,\n          eye4eyeClaim,\n          eye4eyeGrant,\n          eye4eyeBuyerExecuteSeller,\n          eye4eyeSellerExecuteBuyer,\n          eye4eyeReleaseDeposit,\n          eye4eyeGetDeal,\n          handleChange,\n          inputFormData,\n          inputDealIdData,\n          getCurrentAccount,\n          getCurrentNetwork,\n        }}\n      >\n        {children}\n      </Eye4eyeContext.Provider>\n    );\n  };","/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/NotFound.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/Main.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/Navbar.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/components/Deal.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_client_soma/dedeal-frontend-demo/src/utils/connect.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/index.js",[],[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/App.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/context/Eye4eyeContext.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/Navbar.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/NotFound.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/Main.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/components/Deal.js",[],[],"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/utils/connect.js",[],[],{"ruleId":"88","severity":1,"message":"89","line":27,"column":9,"nodeType":"90","messageId":"91","endLine":27,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":104,"column":6,"nodeType":"94","endLine":104,"endColumn":8,"suggestions":"95"},"no-unused-vars","'network' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentNetwork'. Either include it or remove the dependency array.","ArrayExpression",["96"],{"desc":"97","fix":"98"},"Update the dependencies array to be: [currentNetwork]",{"range":"99","text":"100"},[2863,2865],"[currentNetwork]"]