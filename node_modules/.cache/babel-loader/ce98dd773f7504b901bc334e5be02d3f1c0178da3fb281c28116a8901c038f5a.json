{"ast":null,"code":"var _jsxFileName = \"/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/context/Eye4eyeContext.js\",\n  _s = $RefreshSig$();\nimport { ethers } from \"ethers\";\nimport { createContext, useEffect } from \"react\";\nimport { contractABI, contractAddress, networks } from \"../utils/connect\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Eye4eyeContext = /*#__PURE__*/createContext();\nconst {\n  ethereum\n} = window;\nexport const Eye4eyeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [currentNetwork, setCurrentNetwork] = useState(\"\");\n  const [inputFormData, setInputFormData] = useState({\n    _amountOfClaim: \"\",\n    _grantDeadline: \"\",\n    _executeDeadlineInterval: \"\"\n  });\n  const [inputDealIdData] = useState({\n    _dealId: \"\"\n  });\n  // Get the smart contract\n  const getSmartContract = async () => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const network = await provider.getNetwork();\n\n    // currentNetworkがnetworksに存在するか確認\n    // なければ、alertでエラーを出す\n\n    if (!networks[currentNetwork]) {\n      alert(\"Please change network to the network \\n\" + Object.values(networks).map(network => network.name).join(\"\\nor \"));\n      return;\n    }\n    // Eye4eyeProvider.currentNetwork = provider.network;\n    // const currentNetwork = provider.network;\n    const eye4eyeContract = new ethers.Contract(contractAddress, contractABI, signer);\n    console.log(provider, signer, eye4eyeContract);\n    return eye4eyeContract;\n  };\n  const getReadOnlySmartContract = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const eye4eyeContract = new ethers.Contract(contractAddress, contractABI, provider);\n    console.log(provider, eye4eyeContract);\n    return eye4eyeContract;\n  };\n  const handleChange = function (e, name) {\n    let convertToSeconds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let value = e.target.value;\n    if (convertToSeconds === true) {\n      value = value * 3600;\n    }\n    setInputFormData(prevInputFormdata => ({\n      ...prevInputFormdata,\n      [name]: value\n    }));\n  };\n  const checkMetamaskWalletConnected = async () => {\n    if (!ethereum) return alert(\"Access from your Metamask browser or from Chrome on your PC.\");\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n    console.log(accounts);\n  };\n  useEffect(() => {\n    checkMetamaskWalletConnected();\n  }, []);\n  useEffect(() => {\n    const msgCatch = _msgValue => {\n      console.log(\"_msgValue:\", _msgValue);\n    };\n    if (ethereum) {\n      if (currentNetwork) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const eye4eyeContract = new ethers.Contract(networks[currentNetwork].contractAddress, contractABI, signer);\n        const filter = eye4eyeContract.filters.eventMsgValue(null);\n        eye4eyeContract.on(filter, msgCatch);\n      }\n    }\n  }, []);\n  const connectWallet = async () => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    console.log(\"connected wallet: %s\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  };\n  const getCurrentAccount = () => {\n    return currentAccount;\n  };\n  const getCurrentNetwork = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum, \"any\");\n    provider.on(\"network\", (newNetwork, oldNetwork) => {\n      // When a Provider makes its initial connection, it emits a \"network\"\n      // event with a null oldNetwork along with the newNetwork. So, if the\n      // oldNetwork exists, it represents a changing network\n      if (oldNetwork) {\n        window.location.reload();\n      }\n      setCurrentNetwork(newNetwork.chainId);\n    });\n    return currentNetwork;\n  };\n  const eye4eyeClaim = async () => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    console.log(\"eye4eyeClaim\");\n    const {\n      _amountOfClaim,\n      _grantDeadline,\n      _executeDeadlineInterval\n    } = inputFormData;\n    const eye4eyeContract = await getSmartContract();\n    const parsed_AmountOfClaim = ethers.utils.parseEther(_amountOfClaim);\n\n    //eventDealをキャッチし、生成されたdealIdに基づいて生成されたURLに遷移させる\n    const eventDealCatch = _deal => {\n      console.log(\"_deal:\", _deal);\n      const ROOT_URL = \"deal\";\n      const pageId = parseInt(_deal.dealId._hex, 16);\n      console.log(pageId);\n      const pageUrl = `${ROOT_URL}/${pageId}`;\n      //window.open(pageUrl);//別のタブでURLを開く\n      window.location.href = pageUrl; //URLを同じタブで遷移させる\n    };\n\n    const filter = eye4eyeContract.filters.eventDeal(null);\n    eye4eyeContract.on(filter, eventDealCatch);\n    const overrides = {\n      gasLimit: 400000,\n      value: parsed_AmountOfClaim._hex\n    };\n    const eye4eyeClaimHash = await eye4eyeContract.claim(_grantDeadline, _executeDeadlineInterval, overrides);\n    console.log('Loading...eye4eyeClaimHash.hash');\n    await eye4eyeClaimHash.wait();\n    console.log('Successful transfer!eye4eyeClaimHash.hash');\n  };\n  const eye4eyeGrant = async _dealId => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    console.log(\"eye4eyeGrant\");\n    console.log(\"_dealId:\", _dealId);\n    const eye4eyeContract = await getSmartContract();\n    const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    const amountOfClaimed = eye4eyeGetDealHash.amountOfClaim;\n    console.log(\"amountOfClaimed:\", amountOfClaimed);\n    console.log(\"amountOfClaimed._hex:\", amountOfClaimed._hex);\n\n    //eventDealをキャッチ\n    const eventDealCatch = _deal => {\n      console.log(\"_deal:\", _deal);\n    };\n    const filter = eye4eyeContract.filters.eventDeal(null);\n    eye4eyeContract.on(filter, eventDealCatch);\n    const overrides = {\n      gasLimit: 400000,\n      value: amountOfClaimed._hex\n    };\n    const eye4eyeGrantHash = await eye4eyeContract.grant(_dealId, overrides);\n    console.log('Loading...eye4eyeGrantHash');\n    await eye4eyeGrantHash.wait();\n    console.log('Successful transfer!eye4eyeGrantHash');\n  };\n  const eye4eyeBuyerExecuteSeller = async _dealId => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    console.log(\"eye4eyeBuyerExecuteSeller\");\n    console.log(\"_dealId:\", _dealId);\n    const eye4eyeContract = await getSmartContract();\n    const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n    const amountOfDepositHex = doubleHexValue(eye4eyeGetDealHash.amountOfClaim._hex);\n    console.log(\"amountOfDepositHex:\", amountOfDepositHex);\n    console.log(\"amountOfClaim._hex:\", eye4eyeGetDealHash.amountOfClaim._hex);\n\n    //eventGrantをキャッチ\n    const eventDealCatch = _deal => {\n      console.log(\"_deal:\", _deal);\n    };\n    const filter = eye4eyeContract.filters.eventDeal(null);\n    eye4eyeContract.on(filter, eventDealCatch);\n    const overrides = {\n      gasLimit: 400000,\n      value: amountOfDepositHex\n    };\n    const eye4eyeBuyerExecuteSellerHash = await eye4eyeContract.buyerExecuteSeller(_dealId, overrides);\n    console.log('Loading...eye4eyeBuyerExecuteSellerHash');\n    await eye4eyeBuyerExecuteSellerHash.wait();\n    console.log('Successful transfer!eye4eyeBuyerExecuteSellerHash');\n  };\n  const eye4eyeSellerExecuteBuyer = async _dealId => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    console.log(\"eye4eyeSellerExecuteBuyer\");\n    console.log(\"_dealId:\", _dealId);\n    const eye4eyeContract = await getSmartContract();\n    const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n    const amountOfDepositHex = doubleHexValue(eye4eyeGetDealHash.amountOfClaim._hex);\n    console.log(\"amountOfDepositHex:\", amountOfDepositHex);\n    console.log(\"amountOfClaim._hex:\", eye4eyeGetDealHash.amountOfClaim._hex);\n\n    //eventGrantをキャッチ\n    const eventDealCatch = _deal => {\n      console.log(\"_deal:\", _deal);\n    };\n    const filter = eye4eyeContract.filters.eventDeal(null);\n    eye4eyeContract.on(filter, eventDealCatch);\n    const overrides = {\n      gasLimit: 400000,\n      value: amountOfDepositHex\n    };\n    const eye4eyeSellerExecuteBuyerHash = await eye4eyeContract.sellerExecuteBuyer(_dealId, overrides);\n    console.log('Loading...eye4eyeSellerExecuteBuyerHash');\n    await eye4eyeSellerExecuteBuyerHash.wait();\n    console.log('Successful transfer!eye4eyeSellerExecuteBuyerHash');\n  };\n  const eye4eyeReleaseDeposit = async _dealId => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    ;\n    console.log(\"eye4eyeReleaseDeposit\");\n    console.log(\"_dealId:\", _dealId);\n    const eye4eyeContract = await getSmartContract();\n    const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n    //eventGrantをキャッチ\n    const eventDealCatch = _deal => {\n      console.log(\"_deal:\", _deal);\n    };\n    const filter = eye4eyeContract.filters.eventDeal(null);\n    eye4eyeContract.on(filter, eventDealCatch);\n    const overrides = {\n      gasLimit: 400000\n    };\n    const eye4eyeReleaseDepositsHash = await eye4eyeContract.releaseDeposits(_dealId, overrides);\n    console.log('Loading...eye4eyeReleaseDepositsHash');\n    await eye4eyeReleaseDepositsHash.wait();\n    console.log('Successful transfer!eye4eyeReleaseDepositsHash');\n  };\n  function doubleHexValue(hexValue) {\n    let decimalValue = parseInt(hexValue, 16);\n    let doubledValue = decimalValue * 2;\n    let added0xDoubledValue = '0x' + doubledValue.toString(16);\n    return added0xDoubledValue;\n  }\n  ;\n  const eye4eyeGetDeal = async _dealId => {\n    if (!ethereum) return alert(\"Install Metamask\");\n    const eye4eyeContract = getReadOnlySmartContract();\n    const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n    console.log(\"DealID:\", eye4eyeGetDealHash.dealId);\n    return eye4eyeGetDealHash;\n  };\n  return /*#__PURE__*/_jsxDEV(Eye4eyeContext.Provider, {\n    value: {\n      connectWallet,\n      eye4eyeClaim,\n      eye4eyeGrant,\n      eye4eyeBuyerExecuteSeller,\n      eye4eyeSellerExecuteBuyer,\n      eye4eyeReleaseDeposit,\n      eye4eyeGetDeal,\n      handleChange,\n      inputFormData,\n      inputDealIdData,\n      getCurrentAccount,\n      getCurrentNetwork\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 7\n  }, this);\n};\n_s(Eye4eyeProvider, \"/jZm8i1gi9rOz01HjdV9FATizZo=\");\n_c = Eye4eyeProvider;\nvar _c;\n$RefreshReg$(_c, \"Eye4eyeProvider\");","map":{"version":3,"names":["ethers","createContext","useEffect","contractABI","contractAddress","networks","React","useState","Eye4eyeContext","ethereum","window","Eye4eyeProvider","children","currentAccount","setCurrentAccount","currentNetwork","setCurrentNetwork","inputFormData","setInputFormData","_amountOfClaim","_grantDeadline","_executeDeadlineInterval","inputDealIdData","_dealId","getSmartContract","provider","providers","Web3Provider","signer","getSigner","network","getNetwork","alert","Object","values","map","name","join","eye4eyeContract","Contract","console","log","getReadOnlySmartContract","handleChange","e","convertToSeconds","value","target","prevInputFormdata","checkMetamaskWalletConnected","accounts","request","method","msgCatch","_msgValue","filter","filters","eventMsgValue","on","connectWallet","getCurrentAccount","getCurrentNetwork","newNetwork","oldNetwork","location","reload","chainId","eye4eyeClaim","parsed_AmountOfClaim","utils","parseEther","eventDealCatch","_deal","ROOT_URL","pageId","parseInt","dealId","_hex","pageUrl","href","eventDeal","overrides","gasLimit","eye4eyeClaimHash","claim","wait","eye4eyeGrant","eye4eyeGetDealHash","getDeal","amountOfClaimed","amountOfClaim","eye4eyeGrantHash","grant","eye4eyeBuyerExecuteSeller","amountOfDepositHex","doubleHexValue","eye4eyeBuyerExecuteSellerHash","buyerExecuteSeller","eye4eyeSellerExecuteBuyer","eye4eyeSellerExecuteBuyerHash","sellerExecuteBuyer","eye4eyeReleaseDeposit","eye4eyeReleaseDepositsHash","releaseDeposits","hexValue","decimalValue","doubledValue","added0xDoubledValue","toString","eye4eyeGetDeal"],"sources":["/Users/nuun/Desktop/dev/dapps/dedeal/dedeal_ethtokyo/src/context/Eye4eyeContext.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { createContext, useEffect } from \"react\";\nimport { contractABI, contractAddress, networks } from \"../utils/connect\";\nimport React, { useState } from \"react\";\nexport const Eye4eyeContext = createContext();\n\nconst { ethereum } = window;\n\n\n\nexport const Eye4eyeProvider = ({ children }) => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [currentNetwork, setCurrentNetwork] = useState(\"\");\n  const [inputFormData, setInputFormData] = useState({\n    _amountOfClaim: \"\",\n    _grantDeadline: \"\",\n    _executeDeadlineInterval: \"\",\n  });\n  const [inputDealIdData] = useState({\n    _dealId: \"\",\n  });\n  // Get the smart contract\nconst getSmartContract = async () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n\n  const network = await provider.getNetwork();\n  \n  // currentNetworkがnetworksに存在するか確認\n  // なければ、alertでエラーを出す\n\n  if(!networks[currentNetwork]){\n    alert(\"Please change network to the network \\n\" + (Object.values(networks).map((network) => network.name)).join(\"\\nor \"))\n    return;\n  }\n  // Eye4eyeProvider.currentNetwork = provider.network;\n  // const currentNetwork = provider.network;\n  const eye4eyeContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    signer\n  );\n\n  console.log(provider, signer, eye4eyeContract);\n\n  return eye4eyeContract;\n};\n\nconst getReadOnlySmartContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const eye4eyeContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    provider\n  );\n\n  console.log(provider, eye4eyeContract);\n\n  return eye4eyeContract;\n};\n\n\n  const handleChange = (e, name, convertToSeconds = false) => {\n    let value = e.target.value;\n    if (convertToSeconds === true) {\n      value = value * 3600;\n    }\n    setInputFormData((prevInputFormdata) => ({\n      ...prevInputFormdata,\n      [name]: value,\n    }));\n  };\n  const checkMetamaskWalletConnected = async () => {\n    if (!ethereum)\n      return alert(\n        \"Access from your Metamask browser or from Chrome on your PC.\"\n      );\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n    console.log(accounts);\n  };\n\n  useEffect(() => {\n    checkMetamaskWalletConnected();\n  }, []);\n\n  useEffect(() => {\n    const msgCatch = (_msgValue) => {\n      console.log(\"_msgValue:\", _msgValue);\n    };\n    if (ethereum) {\n      if(currentNetwork){\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner(); \n        const eye4eyeContract = new ethers.Contract(\n          networks[currentNetwork].contractAddress,\n          contractABI,\n          signer\n        );\n        const filter = eye4eyeContract.filters.eventMsgValue(null);\n        eye4eyeContract.on(filter, msgCatch);\n      }\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    if (!ethereum) return alert(\"Install Metamask\");\n\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    console.log(\"connected wallet: %s\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  };\n\n  const getCurrentAccount = () => {\n    return currentAccount;\n  };\n\n  const getCurrentNetwork = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum, \"any\");\n\n    provider.on(\"network\", (newNetwork, oldNetwork) => {\n        // When a Provider makes its initial connection, it emits a \"network\"\n        // event with a null oldNetwork along with the newNetwork. So, if the\n        // oldNetwork exists, it represents a changing network\n        if (oldNetwork) {\n            window.location.reload();\n        }\n        setCurrentNetwork(newNetwork.chainId);\n    });\n    return currentNetwork;\n  };\n\n    const eye4eyeClaim =async () => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeClaim\");\n        const {_amountOfClaim, _grantDeadline, _executeDeadlineInterval} = inputFormData;\n\n        const eye4eyeContract = await getSmartContract();\n        const parsed_AmountOfClaim = ethers.utils.parseEther(_amountOfClaim);\n\n        //eventDealをキャッチし、生成されたdealIdに基づいて生成されたURLに遷移させる\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n\n            const ROOT_URL = \"deal\";\n            const pageId = parseInt(_deal.dealId._hex, 16);\n            console.log(pageId);\n            const pageUrl = `${ROOT_URL}/${pageId}`;\n            //window.open(pageUrl);//別のタブでURLを開く\n            window.location.href = pageUrl;//URLを同じタブで遷移させる\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: parsed_AmountOfClaim._hex\n          };\n\n        const eye4eyeClaimHash = await eye4eyeContract.claim(\n            _grantDeadline,\n            _executeDeadlineInterval,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeClaimHash.hash');\n\n        await eye4eyeClaimHash.wait();\n\n        console.log('Successful transfer!eye4eyeClaimHash.hash');\n    };\n\n    const eye4eyeGrant =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeGrant\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        const amountOfClaimed = eye4eyeGetDealHash.amountOfClaim\n        console.log(\"amountOfClaimed:\", amountOfClaimed);\n        console.log(\"amountOfClaimed._hex:\", amountOfClaimed._hex);\n\n        //eventDealをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: amountOfClaimed._hex, \n          };\n\n        const eye4eyeGrantHash = await eye4eyeContract.grant(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeGrantHash');\n\n        await eye4eyeGrantHash.wait();\n\n        console.log('Successful transfer!eye4eyeGrantHash');\n    };\n\n\n    const eye4eyeBuyerExecuteSeller =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeBuyerExecuteSeller\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n        const amountOfDepositHex = doubleHexValue(eye4eyeGetDealHash.amountOfClaim._hex);\n        console.log(\"amountOfDepositHex:\", amountOfDepositHex);\n        console.log(\"amountOfClaim._hex:\", eye4eyeGetDealHash.amountOfClaim._hex);\n\n        //eventGrantをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: amountOfDepositHex, \n          };\n\n        const eye4eyeBuyerExecuteSellerHash = await eye4eyeContract.buyerExecuteSeller(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeBuyerExecuteSellerHash');\n\n        await eye4eyeBuyerExecuteSellerHash.wait();\n\n        console.log('Successful transfer!eye4eyeBuyerExecuteSellerHash');\n    };\n\n    const eye4eyeSellerExecuteBuyer =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");\n        console.log(\"eye4eyeSellerExecuteBuyer\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n        const amountOfDepositHex = doubleHexValue(eye4eyeGetDealHash.amountOfClaim._hex);\n        console.log(\"amountOfDepositHex:\", amountOfDepositHex);\n        console.log(\"amountOfClaim._hex:\", eye4eyeGetDealHash.amountOfClaim._hex);\n\n        //eventGrantをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n            value: amountOfDepositHex, \n          };\n\n        const eye4eyeSellerExecuteBuyerHash = await eye4eyeContract.sellerExecuteBuyer(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeSellerExecuteBuyerHash');\n\n        await eye4eyeSellerExecuteBuyerHash.wait();\n\n        console.log('Successful transfer!eye4eyeSellerExecuteBuyerHash');\n    }\n\n    const eye4eyeReleaseDeposit =async (_dealId) => {\n        if (!ethereum) return alert(\"Install Metamask\");;\n        console.log(\"eye4eyeReleaseDeposit\");\n        console.log(\"_dealId:\", _dealId);\n        const eye4eyeContract = await getSmartContract();\n\n        const eye4eyeGetDealHash = await eye4eyeContract.getDeal(\n            _dealId,\n        );\n\n        console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n\n        //eventGrantをキャッチ\n        const eventDealCatch = (_deal) => {\n            console.log(\"_deal:\", _deal);\n        };\n        const filter = eye4eyeContract.filters.eventDeal(null);\n        eye4eyeContract.on(filter, eventDealCatch);\n\n        const overrides = {\n            gasLimit: 400000,\n          };\n\n        const eye4eyeReleaseDepositsHash = await eye4eyeContract.releaseDeposits(\n            _dealId,\n            overrides,\n        );\n\n        console.log('Loading...eye4eyeReleaseDepositsHash');\n\n        await eye4eyeReleaseDepositsHash.wait();\n\n        console.log('Successful transfer!eye4eyeReleaseDepositsHash');\n    };\n\n    function doubleHexValue(hexValue) {\n        let decimalValue = parseInt(hexValue, 16);\n        let doubledValue = decimalValue * 2;\n        let added0xDoubledValue = '0x' + doubledValue.toString(16);\n        return added0xDoubledValue;\n    };\n\n    const eye4eyeGetDeal = async (_dealId) => {\n      if (!ethereum) return alert(\"Install Metamask\");\n      const eye4eyeContract = getReadOnlySmartContract();\n    \n      const eye4eyeGetDealHash = await eye4eyeContract.getDeal(_dealId);\n    \n      console.log(\"eye4eyeGetDealHash:\", eye4eyeGetDealHash);\n      console.log(\"DealID:\", eye4eyeGetDealHash.dealId);\n    \n      return eye4eyeGetDealHash;\n    };\n\n    return (\n      <Eye4eyeContext.Provider\n        value={{\n          connectWallet,\n          eye4eyeClaim,\n          eye4eyeGrant,\n          eye4eyeBuyerExecuteSeller,\n          eye4eyeSellerExecuteBuyer,\n          eye4eyeReleaseDeposit,\n          eye4eyeGetDeal,\n          handleChange,\n          inputFormData,\n          inputDealIdData,\n          getCurrentAccount,\n          getCurrentNetwork,\n        }}\n      >\n        {children}\n      </Eye4eyeContext.Provider>\n    );\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}